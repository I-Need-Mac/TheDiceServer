name: Build and Deploy

on:
  push:
    branches: [ "dev", "feature/*" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build:
    timeout-minutes: 10
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'microsoft'

      - name: Start Docker containers
        run: docker-compose -f "compose.yaml" up -d --build

      - name: Build with Gradle
        uses: gradle/gradle-build-action@v2
        with:
          arguments: clean test bootJar --scan

      - name: Stop Docker containers
        if: always()
        run: docker-compose -f "compose.yaml" down

      - name: Archive artifacts
        uses: actions/upload-artifact@v3
        with:
          name: artifacts
          path: build/libs/

  deploy:
    needs: [ "build" ]
    runs-on: ubuntu-latest
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          name: artifacts
          path: artifacts

      - name: Deploy artifacts to Remote server
        env:
          SSH_HOST: ${{ secrets.SSH_HOST }}
          SSH_PORT: ${{ secrets.SSH_PORT }}
          SSH_USER: ${{ secrets.SSH_USER }}
          SSH_KEY: ${{ secrets.SSH_KEY }}
        run: |
          SSH_KEY_PATH="$(mktemp)"
          echo "$SSH_KEY" > "$SSH_KEY_PATH"
          chmod 600 "$SSH_KEY_PATH"
          scp -i "$SSH_KEY_PATH" -P $SSH_PORT -o "StrictHostKeyChecking=no" artifacts/*.jar $SSH_USER@$SSH_HOST:/opt/dice/
          ssh -i "$SSH_KEY_PATH" -o "StrictHostKeyChecking=no" -p $SSH_PORT $SSH_USER@$SSH_HOST << EOF
            mv /opt/dice/app.jar /opt/dice/app.jar.bak
            cp /opt/dice/*.jar /opt/dice/app.jar
            systemctl --user restart dice-server.service
          EOF
          rm -f "$SSH_KEY_PATH"
